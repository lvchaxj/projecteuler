package main

import "fmt"

func input(m []int64, s string) []int64 {
	ss := make([]int64, len(s))
	for i := 0; i < len(s); i++ {
		ss[i] = int64(s[i] - '0')
	}
	return append(m, ss...)
}

func main() {
	n := 13

	m := make([]int64, 0)
	m = input(m, "73167176531330624919225119674426574742355349194934")
	m = input(m, "96983520312774506326239578318016984801869478851843")
	m = input(m, "85861560789112949495459501737958331952853208805511")
	m = input(m, "12540698747158523863050715693290963295227443043557")
	m = input(m, "66896648950445244523161731856403098711121722383113")
	m = input(m, "62229893423380308135336276614282806444486645238749")
	m = input(m, "30358907296290491560440772390713810515859307960866")
	m = input(m, "70172427121883998797908792274921901699720888093776")
	m = input(m, "65727333001053367881220235421809751254540594752243")
	m = input(m, "52584907711670556013604839586446706324415722155397")
	m = input(m, "53697817977846174064955149290862569321978468622482")
	m = input(m, "83972241375657056057490261407972968652414535100474")
	m = input(m, "82166370484403199890008895243450658541227588666881")
	m = input(m, "16427171479924442928230863465674813919123162824586")
	m = input(m, "17866458359124566529476545682848912883142607690042")
	m = input(m, "24219022671055626321111109370544217506941658960408")
	m = input(m, "07198403850962455444362981230987879927244284909188")
	m = input(m, "84580156166097919133875499200524063689912560717606")
	m = input(m, "05886116467109405077541002256983155200055935729725")
	m = input(m, "71636269561882670428252483600823257530420752963450")

	var max, v int64 = 0, 1
	for i := 0; i <= 1000-n; i++ {
		v = 1
		for j := i; j < i+n; j++ {
			v *= m[j]
		}
		if v > max {
			max = v
		}
	}

	fmt.Println(max)

}
